// Code generated by protoc-gen-go. DO NOT EDIT.
// source: briscola/pb/compare.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Seed int32

const (
	Seed_COIN   Seed = 0
	Seed_CUP    Seed = 1
	Seed_SWORD  Seed = 2
	Seed_CUDGEL Seed = 3
)

var Seed_name = map[int32]string{
	0: "COIN",
	1: "CUP",
	2: "SWORD",
	3: "CUDGEL",
}

var Seed_value = map[string]int32{
	"COIN":   0,
	"CUP":    1,
	"SWORD":  2,
	"CUDGEL": 3,
}

func (x Seed) String() string {
	return proto.EnumName(Seed_name, int32(x))
}

func (Seed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be44f4fd203b4c6b, []int{0}
}

type ItalianCard struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Seed                 Seed     `protobuf:"varint,2,opt,name=seed,proto3,enum=pb.Seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItalianCard) Reset()         { *m = ItalianCard{} }
func (m *ItalianCard) String() string { return proto.CompactTextString(m) }
func (*ItalianCard) ProtoMessage()    {}
func (*ItalianCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_be44f4fd203b4c6b, []int{0}
}

func (m *ItalianCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItalianCard.Unmarshal(m, b)
}
func (m *ItalianCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItalianCard.Marshal(b, m, deterministic)
}
func (m *ItalianCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItalianCard.Merge(m, src)
}
func (m *ItalianCard) XXX_Size() int {
	return xxx_messageInfo_ItalianCard.Size(m)
}
func (m *ItalianCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ItalianCard.DiscardUnknown(m)
}

var xxx_messageInfo_ItalianCard proto.InternalMessageInfo

func (m *ItalianCard) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ItalianCard) GetSeed() Seed {
	if m != nil {
		return m.Seed
	}
	return Seed_COIN
}

type CardCompareRequest struct {
	FirstCard            *ItalianCard `protobuf:"bytes,1,opt,name=first_card,json=firstCard,proto3" json:"first_card,omitempty"`
	SecondCard           *ItalianCard `protobuf:"bytes,2,opt,name=second_card,json=secondCard,proto3" json:"second_card,omitempty"`
	Briscola             Seed         `protobuf:"varint,3,opt,name=briscola,proto3,enum=pb.Seed" json:"briscola,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CardCompareRequest) Reset()         { *m = CardCompareRequest{} }
func (m *CardCompareRequest) String() string { return proto.CompactTextString(m) }
func (*CardCompareRequest) ProtoMessage()    {}
func (*CardCompareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be44f4fd203b4c6b, []int{1}
}

func (m *CardCompareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardCompareRequest.Unmarshal(m, b)
}
func (m *CardCompareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardCompareRequest.Marshal(b, m, deterministic)
}
func (m *CardCompareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardCompareRequest.Merge(m, src)
}
func (m *CardCompareRequest) XXX_Size() int {
	return xxx_messageInfo_CardCompareRequest.Size(m)
}
func (m *CardCompareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardCompareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardCompareRequest proto.InternalMessageInfo

func (m *CardCompareRequest) GetFirstCard() *ItalianCard {
	if m != nil {
		return m.FirstCard
	}
	return nil
}

func (m *CardCompareRequest) GetSecondCard() *ItalianCard {
	if m != nil {
		return m.SecondCard
	}
	return nil
}

func (m *CardCompareRequest) GetBriscola() Seed {
	if m != nil {
		return m.Briscola
	}
	return Seed_COIN
}

type CardCompareResponse struct {
	SecondCardWinsOverFirstOne bool     `protobuf:"varint,1,opt,name=second_card_wins_over_first_one,json=secondCardWinsOverFirstOne,proto3" json:"second_card_wins_over_first_one,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *CardCompareResponse) Reset()         { *m = CardCompareResponse{} }
func (m *CardCompareResponse) String() string { return proto.CompactTextString(m) }
func (*CardCompareResponse) ProtoMessage()    {}
func (*CardCompareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be44f4fd203b4c6b, []int{2}
}

func (m *CardCompareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardCompareResponse.Unmarshal(m, b)
}
func (m *CardCompareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardCompareResponse.Marshal(b, m, deterministic)
}
func (m *CardCompareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardCompareResponse.Merge(m, src)
}
func (m *CardCompareResponse) XXX_Size() int {
	return xxx_messageInfo_CardCompareResponse.Size(m)
}
func (m *CardCompareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardCompareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardCompareResponse proto.InternalMessageInfo

func (m *CardCompareResponse) GetSecondCardWinsOverFirstOne() bool {
	if m != nil {
		return m.SecondCardWinsOverFirstOne
	}
	return false
}

func init() {
	proto.RegisterEnum("pb.Seed", Seed_name, Seed_value)
	proto.RegisterType((*ItalianCard)(nil), "pb.ItalianCard")
	proto.RegisterType((*CardCompareRequest)(nil), "pb.CardCompareRequest")
	proto.RegisterType((*CardCompareResponse)(nil), "pb.CardCompareResponse")
}

func init() { proto.RegisterFile("briscola/pb/compare.proto", fileDescriptor_be44f4fd203b4c6b) }

var fileDescriptor_be44f4fd203b4c6b = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x6d, 0x37, 0x67, 0x77, 0x8a, 0x5a, 0x22, 0x48, 0x15, 0xc1, 0x51, 0xbc, 0x18, 0x5e,
	0x74, 0x63, 0x3e, 0x42, 0xa6, 0x32, 0x10, 0x2b, 0x19, 0x63, 0xe0, 0x4d, 0x49, 0xda, 0x23, 0x14,
	0xb6, 0x24, 0x26, 0xdd, 0x7c, 0x19, 0x1f, 0x56, 0x9a, 0xfa, 0x67, 0x8a, 0x97, 0x49, 0xbe, 0xdf,
	0xf9, 0x7d, 0x39, 0x70, 0x26, 0x4c, 0x65, 0x0b, 0xb5, 0xe2, 0x23, 0x2d, 0x46, 0x85, 0x5a, 0x6b,
	0x6e, 0x30, 0xd5, 0x46, 0xd5, 0x8a, 0xf8, 0x5a, 0x24, 0x14, 0xc2, 0x59, 0xcd, 0x57, 0x15, 0x97,
	0x94, 0x9b, 0x92, 0x9c, 0x42, 0x4f, 0x6e, 0xd6, 0x02, 0x4d, 0xec, 0x0d, 0xbc, 0xe1, 0x21, 0xfb,
	0x3c, 0x91, 0x0b, 0xe8, 0x5a, 0xc4, 0x32, 0xf6, 0x07, 0xde, 0xf0, 0x68, 0x12, 0xa4, 0x5a, 0xa4,
	0x73, 0xc4, 0x92, 0xb9, 0xdb, 0xe4, 0xdd, 0x03, 0xd2, 0xe0, 0xb4, 0x1d, 0xcf, 0xf0, 0x75, 0x83,
	0xb6, 0x26, 0x29, 0xc0, 0x4b, 0x65, 0x6c, 0x9d, 0x17, 0xdc, 0x94, 0x6e, 0x60, 0x38, 0x39, 0x6e,
	0xd0, 0x1d, 0x23, 0xeb, 0xbb, 0x88, 0x93, 0x8f, 0x21, 0xb4, 0x58, 0x28, 0x59, 0xb6, 0x80, 0xff,
	0x3f, 0x00, 0x6d, 0xc6, 0x11, 0x57, 0x10, 0x7c, 0x7d, 0x2f, 0xee, 0xfc, 0xa9, 0xf6, 0xfd, 0x92,
	0x3c, 0xc3, 0xc9, 0xaf, 0x76, 0x56, 0x2b, 0x69, 0x91, 0x50, 0xb8, 0xdc, 0xd1, 0xe5, 0x6f, 0x95,
	0xb4, 0xb9, 0xda, 0xa2, 0xc9, 0xdb, 0xd2, 0x4a, 0xa2, 0xeb, 0x1c, 0xb0, 0xf3, 0x1f, 0xe3, 0xb2,
	0x92, 0x36, 0xdb, 0xa2, 0xb9, 0x6b, 0x22, 0x99, 0xc4, 0xeb, 0x31, 0x74, 0x1b, 0x1b, 0x09, 0xa0,
	0x4b, 0xb3, 0xd9, 0x63, 0xb4, 0x47, 0x0e, 0xa0, 0x43, 0x17, 0x4f, 0x91, 0x47, 0xfa, 0xb0, 0x3f,
	0x5f, 0x66, 0x6c, 0x1a, 0xf9, 0x04, 0xa0, 0x47, 0x17, 0xd3, 0xfb, 0xdb, 0x87, 0xa8, 0x23, 0x7a,
	0x6e, 0xf9, 0x37, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xad, 0x11, 0xd6, 0x99, 0x01, 0x00,
	0x00,
}
